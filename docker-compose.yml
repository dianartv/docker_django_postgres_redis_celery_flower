version: '3.8'

services:
  django:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./service:/service
    env_file:
      - ./.env.dev
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
      - POSTGRES_DB=django_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    hostname: redis

  celery:
    build:
      context: .
    hostname: celery
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./service:/service
    environment:
      - DB_HOST=database
      - DB_NAME=django_db
      - DB_USER=django_user
      - DB_PASS=django_password
    depends_on:
      - redis
      - database

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/service
    environment:
      - DB_HOST=database
      - DB_NAME=django_db
      - DB_USER=django_user
      - DB_PASS=django_password
    depends_on:
      - redis
      - database
    ports:
      - "5555:5555"
